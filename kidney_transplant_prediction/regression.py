# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_Regression_Analysis.ipynb.

# %% auto 0
__all__ = ['df_pheno', 'overview']

# %% ../nbs/02_Regression_Analysis.ipynb 4
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import statsmodels.formula.api as smf

df_pheno = pd.read_pickle('../data/proc/pheno_eng.pkl')

# %% ../nbs/02_Regression_Analysis.ipynb 10
def overview():
    x = df_pheno.dropna(subset=['eGFR1Year']).drop([
        'RecId', 'DonId', 'GraftSurvivalDays', 'GraftCensored', 'RecSex_num', 'DonSex_num', 
        'PrimaryRenalDisease', 'GraftDate', 'eGFR1Year', 'eGFR5Year', 'GraftType_num', 'Season_num',
    ], axis=1)
    y = df_pheno.dropna(subset=['eGFR1Year'])['eGFR1Year']

    for col in x.columns:
        results = smf.ols(f"eGFR1Year ~ {col}", data=df_pheno).fit()
        print('_' * 50)
        print(' ' * 20, col)
        print('_' * 50)
        for t in results.pvalues.index:
            print(f'{t} is{" not" if results.pvalues[t] > 0.05 else ""} significant with a coefficient {round(results.params[t],5)} and a p-value of {round(results.pvalues[t],5)}')
    
overview()
